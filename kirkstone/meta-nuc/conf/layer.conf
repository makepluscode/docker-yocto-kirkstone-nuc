# We set the layer compatibility for kirkstone
BBPATH .= ":${LAYERDIR}"
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
            ${LAYERDIR}/recipes-*/*/*.bbappend"

BBFILE_COLLECTIONS += "meta-nuc"
BBFILE_PATTERN_meta-nuc = "^${LAYERDIR}/"
BBFILE_PRIORITY_meta-nuc = "10"

LAYERSERIES_COMPAT_meta-nuc = "kirkstone"

# Optional metadata
LAYERVERSION_meta-nuc = "1"
LAYERDEPENDS_meta-nuc = ""

# Layer-specific default settings
# You can move the following to a distro .conf or machine .conf if needed.
MACHINE ??= "intel-corei7-64"

DISTRO ?= "nodistro"
DISTRO_FEATURES:append = " systemd rauc"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"

PREFERRED_PROVIDER_virtual/grub-bootconf = "rauc-qemu-grubconf"
EFI_PROVIDER = "grub-efi"

IMAGE_FSTYPES = "ext4 wic"
DEPLOYABLE_IMAGE_TYPES = "ext4 wic"
IMAGE_TYPEDEP_wic = "ext4"

WKS_FILE = "image-installer.wks.in"
INITRD_IMAGE_LIVE = "core-image-minimal-initramfs"
do_image_wic[depends] += "${INITRD_IMAGE_LIVE}:do_image_complete"
do_rootfs[depends] += "virtual/kernel:do_deploy"

IMAGE_ROOTFS_EXTRA_SPACE = "0"
IMAGE_ROOTFS_SIZE = "2048000"

IMAGE_BOOT_FILES:append = "\
    ${KERNEL_IMAGETYPE} \
    microcode.cpio \
    ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}.ext4;rootfs.img \
    ${@bb.utils.contains('EFI_PROVIDER', 'grub-efi', 'grub-efi-bootx64.efi;EFI/BOOT/bootx64.efi', '', d)} \
    ${@bb.utils.contains('EFI_PROVIDER', 'grub-efi', '${IMAGE_ROOTFS}/boot/EFI/BOOT/grub.cfg;EFI/BOOT/grub.cfg', '', d)} \
    ${@bb.utils.contains('EFI_PROVIDER', 'systemd-boot', 'systemd-bootx64.efi;EFI/BOOT/bootx64.efi', '', d)} \
    ${@bb.utils.contains('EFI_PROVIDER', 'systemd-boot', '${IMAGE_ROOTFS}/boot/loader/loader.conf;loader/loader.conf', '', d)} \
    ${@bb.utils.contains('EFI_PROVIDER', 'systemd-boot', '${IMAGE_ROOTFS}/boot/loader/entries/boot.conf;loader/entries/boot.conf', '', d)} \
"

IMAGE_INSTALL:append = " \
    intel-nuc-init \
    rauc \
"